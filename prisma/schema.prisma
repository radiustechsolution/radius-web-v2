// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                Int       @id @default(autoincrement())
  first_name        String
  last_name         String
  username          String    @unique
  email             String    @unique
  email_v_status    Boolean?  @default(false)
  otp               String?
  phone_number      String    @unique
  password          String
  xagonn            String    @default("sampleregex")
  pin               String?   // Nullable field
  balance           Decimal   @default(0.00) @db.Decimal(60, 2)
  status            Boolean   @default(true)
  promo_code        String
  invited_by        String?
  last_bonus_claim  String    @default("now")
  token             String?
  account_type      String    @default("user")
  profile_locked    Boolean   @default(false) // Added this field
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  // Relation to virtual_accounts
  virtual_accounts  virtual_accounts[] @relation("UserVirtualAccounts")
}

model admin {
  id                  Int      @id @default(autoincrement())
  data_status         Boolean  @default(true)
  airtime_status      Boolean  @default(true)
  electricity_status  Boolean  @default(true)
  cable_status        Boolean  @default(true)
  education_status    Boolean  @default(true)
  internet_status     Boolean  @default(true)
  daily_bonus         Decimal  @default(0.00) @db.Decimal(60, 2)
  all_services_status Boolean  @default(true)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
}


model transactions {
  id                Int      @id @default(autoincrement())
  user_id           String
  type              String
  txf               String   @unique
  x_ref             String?
  session_id        String?
  amount            Decimal  @db.Decimal(60, 2)
  fee               Decimal?  @db.Decimal(60, 2)
  balance_before    Decimal  @db.Decimal(60, 2)
  balance_after     Decimal  @db.Decimal(60, 2)
  profit            Decimal  @db.Decimal(60, 2) @default(0)
  trans_type        String
  account_type      String?
  amount_sent       Decimal?  @db.Decimal(60, 2)
  beneficiary       String?
  status            String
  narration         String
  product           String?
  merchant          String?
  account_name      String?
  account_number    String?
  bank_name         String?
  bank_code         String?
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
}


model virtual_accounts {
  id                  Int      @id @default(autoincrement())
  customer_id         Int
  account_id          String?
  account_reference   String
  account_number      String
  account_name        String
  bank_name           String
  bank_code           String?
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  user                user     @relation("UserVirtualAccounts", fields: [customer_id], references: [id])
}


model notifications {
  id            Int      @id @default(autoincrement())
  customer_id   String
  type          String
  message       String
  status        Boolean  @default(false)
  link          String
  img           String
  ref           String
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

